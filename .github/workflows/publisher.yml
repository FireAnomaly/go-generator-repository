name: Auto Release


on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: [self-hosted, Linux, X64]
    outputs:
      new_version: ${{ steps.bump.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # нужно, чтобы теги были доступны

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Build
        run: go build -o go-generator-repo

      - name: Get latest tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $latest_tag"
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV

      - name: Bump version
        id: bump
        run: |
          latest=${{ env.latest_tag }}
          # Удаляем 'v' и парсим числа
          version=${latest#v}
          major=$(echo $version | cut -d. -f1)
          minor=$(echo $version | cut -d. -f2)
          patch=$(echo $version | cut -d. -f3)
          new_patch=$((patch + 1))
          new_version="v$major.$minor.$new_patch"
          echo "new_version=$new_version" >> $GITHUB_ENV
          echo "New version: $new_version"
          echo "::set-output name=new_version::$new_version"

  release:
    needs: build
    runs-on: [self-hosted, Linux, X64]

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.new_version }}
          release_name: Release ${{ needs.build.outputs.new_version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./go-generator-repo
          asset_name: go-generator-repo-${{ needs.build.outputs.new_version }}-linux-amd64
          asset_content_type: application/octet-stream